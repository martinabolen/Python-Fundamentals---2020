1.
from collections import defaultdict
occurrences=defaultdict(int)
word=input()

for letter in word:
    if letter !=' ':
        occurrences[letter]+=1

for element,count in occurrences.items():
    print(f'{element} -> {count}')
    
    
2.
from collections import defaultdict
counter=0
recourses=defaultdict(int)

while True:
    command=input()
    quantity = 0
    if command=='stop':
        break
    counter+=1
    if counter%2!=0:
        recourse=command
    elif counter%2==0:
        quantity=int(command)
    recourses[recourse]+=quantity


for recourse,quantity in recourses.items():
    print(f'{recourse} -> {quantity}')
    
    
3.
def print_dict(dictionary,template):
    for key,value in dictionary.items():
        print(template.format(key,value))

from collections import defaultdict

key_materials={
    'shards':0,
    'fragments':0,
    'motes':0
}

legendary_items={
    'shards':'Shadowmourne',
    'fragments':'Valanyr',
    'motes':'Dragonwrath'
}

junks=defaultdict(int)
winner=''

while winner=='':
    strings=input().lower().split()
    for i in range(0,len(strings),2):
        quantity=int(strings[i])
        material=strings[i+1]
        if material in key_materials:
            key_materials[material]+=quantity
            if key_materials[material]>=250:
                winner=material
                break
        else:
            junks[material]+=quantity

key_materials[material]-=250
winner_item=legendary_items[winner]

print(f'{winner_item} obtained!')
key_materials = dict(sorted(key_materials.items(), key=lambda el: (-el[1], el[0])))
junks = dict(sorted(junks.items()))
print_dict(key_materials,'{}: {}')
print_dict(junks,'{}: {}')



4.
from collections import defaultdict
quantity_dict=defaultdict(float)
price_dict={}
command=input()

while command!='buy':
    list=command.split(' ')
    product=list[0]
    price=float(list[1])
    quantity=int(list[2])
    quantity_dict[product]+=quantity
    price_dict[product]=price
    command=input()

for key,value in quantity_dict.items():
    print(f'{key} -> {value*price_dict[key]:.2f}')
    
    
5.
registered_license={}
n=int(input())

for i in range(n):
    command=input().split(' ')
    action=command[0]
    name=command[1]
    if len(command)>2:
        driver_license=command[2]
    if action=='register':
        if name not in registered_license:
            registered_license[name]=driver_license
            print(f'{name} registered {driver_license} successfully')
        else:
            print(f'ERROR: already registered with plate number {driver_license}')
    elif action=='unregister':
        if name not in registered_license:
            print(f'ERROR: user {name} not found')
        else:
            registered_license.pop(name)
            print(f'{name} unregistered successfully')


for key,value in registered_license.items():
    print(f'{key} => {value}')


6.
from collections import defaultdict
courses=defaultdict(list)
command=input()

while command!='end':
    list=command.split(' : ')
    course=list[0]
    student=list[1]
    courses[course].append(student)
    command=input()

if command=='end':
    courses=dict(sorted(courses.items(),key=lambda el:(-len(el[1]))))
    for key,values in courses.items():
        print(f'{key}: {len(values)}')
        values=sorted(values)
        for value in values:
            print(f'-- {value}')
            
          
7.
n=int(input())
from collections import defaultdict
students_grades=defaultdict(list)
average_students={}

for i in range(n):
    name=input()
    grade=float(input())
    students_grades[name].append(grade)

for key,values in students_grades.items():
    average_value = 0
    for value in values:
        average_value+=value
    if average_value/len(values) < 4.50:
        continue
    average_students[key]=average_value/len(values)

average_students=dict(sorted(average_students.items(),key=lambda el:(-el[1])))
for key,values in average_students.items():
    print(f'{key} -> {values:.2f}')


8.
from collections import defaultdict
company_users=defaultdict(list)
printed_values=[]

while True:
    command=input()
    if command=='End':
        company_users = dict(sorted(company_users.items()))
        for key, values in company_users.items():
            print(key)
            for value in values:
                print(f'-- {value}')
        break
    list=command.split(' -> ')
    company=list[0]
    id=list[1]
    if id in company_users[company]:
        continue
    company_users[company].append(id)


9.
from collections import defaultdict
forcebook=defaultdict(list)
users=[]
flag=False

while True:
    command=input()
    if command=='Lumpawaroo':
        break
    if '|' in command:
        list=command.split(' | ')
        side=list[0]
        user=list[1]
        users=[user for value in forcebook.values() for user in value]
        if user not in users:
            forcebook[side].append(user)
    elif '->' in command:
        list=command.split(' -> ')
        user=list[0]
        side=list[1]
        print(f'{user} joins the {side} side!')
        for key,value in forcebook.items():
            if user in value:
                forcebook[key].remove(user)
                forcebook[side].append(user)
                flag=True
                break
        if flag:
            continue
        forcebook[side].append(user)



if command=='Lumpawaroo':
    forcebook=dict(sorted(forcebook.items(),key=lambda el:(-len(el[1]),el[0])))
    for key,values in forcebook.items():
        values=sorted(values)
        if len(values)>0:
            print(f'Side: {key}, Members: {len(values)}')
        for value in values:
            print(f'! {value}')


10.
from collections import defaultdict
students_points=defaultdict(list)
languages_students=defaultdict(list)


while True:
    command=input()
    if command=='exam finished':
        break
    list=command.split('-')
    name=list[0]
    language=list[1]
    if language=='banned':
        students_points.pop(name)
        continue
    if len(list)>2:
        points=int(list[2])
    students_points[name].append(points)
    languages_students[language].append(name)


for key,values in students_points.items():
    max_value = -9999
    for value in values:
        if value > max_value:
            max_value=value
    students_points[key]=max_value

students_points=dict(sorted(students_points.items(),key=lambda el:(-el[1],el[0])))
languages_students=dict(sorted(languages_students.items(),key=lambda el:(-len(el[1]),el[0])))

print('Results:')
for key,value in students_points.items():
    print(f'{key} | {value}')
print(f'Submissions:')
for key,value in languages_students.items():
    print(f'{key} - {len(value)}')
